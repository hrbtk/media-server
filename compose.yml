services:
  # Jellyfin
  jellyfin:
    container_name: jellyfin
    image: lscr.io/linuxserver/jellyfin:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER}/jellyfin/config:/config
      - ${DOCKER}/jellyfin/cache:/cache
      - ${MEDIA}:/data/media
      - /opt/vc/lib:/opt/vc/lib
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    devices: # iGPU passthrough
      - /dev/dri:/dev/dri

  # qBitTorrent
  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8085
      - TORRENTING_PORT=6881
    volumes:
      - ${DOCKER}/qbittorrent/config:/config
      - ${TORRENTS}:/data/torrents #optional
    ports:
      - 8085:8085
      - 6881:6881
      - 6881:6881/udp

  # Sonarr
  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    depends_on:
      - prowlarr
      - qbittorrent
    volumes:
      - ${DOCKER}/sonarr/config:/config
      - ${DATA}:/data
    ports:
      - 8989:8989

  # Radarr
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    depends_on:
      - prowlarr
      - qbittorrent
    volumes:
      - ${DOCKER}/radarr/config:/config
      - ${DATA}:/data
    ports:
      - 7878:7878

  # Prowlarr
  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    restart: unless-stopped
    depends_on:
      - qbittorrent
    volumes:
      - ${DOCKER}/prowlarr/config:/config
    ports:
      - 9696:9696

  # Jellyseerr
  jellyseerr:
    container_name: jellyseerr
    image: fallenbagel/jellyseerr:latest
    restart: unless-stopped
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
      - PORT=5055 #optional
    ports:
      - 5055:5055
    volumes:
      - ${DOCKER}/jellyseerr/config:/app/config

  # Homearr
  homarr:
    container_name: homarr
    image: ghcr.io/homarr-labs/homarr:latest
    restart: unless-stopped
    volumes:
      - ${DOCKER}/homarr:/appdata
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      SECRET_ENCRYPTION_KEY: ${HOMARR_SECRET_ENCRYPTION_KEY}
    ports:
      - 7575:7575

  # Dash.
  dash:
    container_name: dash
    image: mauricenino/dashdot:latest
    restart: unless-stopped
    privileged: true
    ports:
      - 3001:3001
    volumes:
      - /:/mnt/host:ro
    environment:
      DASHDOT_ENABLE_CPU_TEMPS: 'true'
      DASHDOT_ALWAYS_SHOW_PERCENTAGES: 'true'
      DASHDOT_WIDGET_LIST: 'os,cpu,storage,ram,network'
      DASHDOT_OS_LABEL_LIST: 'os,arch,up_since'
      DASHDOT_CPU_LABEL_LIST: 'brand,model,cores,threads,frequency'
      DASHDOT_STORAGE_LABEL_LIST: 'brand,size,type'
      DASHDOT_RAM_LABEL_LIST: 'brand,size,type,frequency'
      DASHDOT_NETWORK_LABEL_LIST: 'type,speed_up,speed_down,interface_speed'
      DASHDOT_GPU_LABEL_LIST: 'brand, model, memory'

  # FileBrowser
  filebrowser:
    container_name: filebrowser
    image: filebrowser/filebrowser:v2.23.0
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    hostname: filebrowser
    ports:
      - 10180:80
    volumes:
      - ${DOCKER}/filebrowser/db:/db
      - /:/srv
    network_mode: bridge

  # HomeAssistant
  # homeassistant:
  #   container_name: homeassistant
  #   image: "ghcr.io/home-assistant/home-assistant:stable"
  #   restart: unless-stopped
  #   volumes:
  #     - ${DOCKER}/homeassistant/config:/config
  #     - /etc/localtime:/etc/localtime:ro
  #     - /run/dbus:/run/dbus:ro
  #   privileged: true
  #   network_mode: host

  # Vaultwarden
  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest
    restart: unless-stopped
    environment:
      - LOG_LEVEL=info
      - SIGNUPS_ALLOWED=true #change to false after register
    hostname: vaultwarden
    ports:
      - 10380:80
    volumes:
      - ${DOCKER}/vaultwarden/data:/data

  # Vaultwarden backup
  vaultwarden-backup:
    image: ttionya/vaultwarden-backup:latest
    restart: always
    environment:
      RCLONE_REMOTE_NAME: ${RCLONE_REMOTE_NAME}
      RCLONE_REMOTE_DIR: ${RCLONE_REMOTE_DIR}
      ZIP_PASSWORD: ${ZIP_PASSWORD}
      BACKUP_KEEP_DAYS: ${BACKUP_KEEP_DAYS}
      TIMEZONE: ${TZ}
    volumes:
      - ${DOCKER}/vaultwarden/data:/bitwarden/data/
      - ${HOME}/.config/rclone:/config/

  # Nginx Proxy Manager
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    hostname: nginx-proxy-manager
    ports:
      - 80:80
      - 81:81
      - 443:443
    volumes:
      - ${DOCKER}/npm/data:/data
      - ${DOCKER}/npm/letsencrypt:/etc/letsencrypt

  # Bazarr
  # bazarr:
  #   container_name: bazarr
  #   image: lscr.io/linuxserver/bazarr:latest
  #   restart: unless-stopped
  #   volumes:
  #     - ${DOCKER}/bazarr/config:/config
  #     - ${DATA}:/data
  #   ports:
  #     - 6767:6767

  # Lingarr
  # lingarr:
  #   container_name: lingarr
  #   image: lingarr/lingarr:latest
  #   restart: unless-stopped
  #   volumes:
  #     - ${DATA}:/data
  #     - ${DOCKER}/lingarr/config:/app/config
  #   ports:
  #     - 7676:8080
